.container {
  display: flex;
  flex-direction: column;
  background: var(--color-surface);
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.editorHeader {
  top: 0;
  left: 0;
  right: 0;
  flex: 0 0;
  display: flex;
  width: 100%;
  justify-content: space-between;
  align-items: flex-start;
  background: var(--color-surface-elevated);
  border-bottom: 1px solid var(--color-border);
  padding: var(--space-3);
  z-index: var(--z-above);
}

.editorPanel {
  flex: 1 1;
  overflow-y: scroll;
}

.editor {
  border-radius: inherit;
  flex-grow: 1;
  width: 100%;
  height: 100%;
}

.editor:focus {
  outline: none;
}

.editorContainer {
  position: relative;
  min-height: 100%;
  width: 100%;
  max-width: 800px;
  margin: auto;
  overflow: auto;
  font-size: 14px;
  transform-origin: center top;
  transition: transform 0.2s ease;
}

.editorZoomContainer {
  display: flex;
  justify-content: center;
  min-height: 100%;
  padding: 2rem;
  overflow: auto;
  min-width: min-content;
  width: 100%;
  margin: 0 auto;
}

.editorZoomWrapper {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: auto;
  padding: 1rem;
}

.placeholder {
  pointer-events: none;
  position: absolute;
  inset: 0;
  opacity: 0.3;
  padding: 0 1em;
}

.bubbleMenuWrapper {
  display: flex;
  background: var(--color-surface-elevated);
  gap: var(--space-2);
  padding: var(--space-3);
  box-shadow: var(--shadow-xl);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-sm);
}

.ProseMirror-focused > p.has-focus.is-empty::before {
  content: 'Type  /  to browse options';
}

.ProseMirror-focused > [data-type='columns'] > [data-type='column'] > p.is-empty.has-focus::before {
  content: 'Type  /  to browse options';
}

.tableWrapper {
  overflow-x: auto;
}
